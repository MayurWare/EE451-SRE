# Mid-Wave Infrared InAs/GaAs Type-II Superlattice Photodetector with n-B-p Design Grown on GaAs Substrate
# Defining Parameters
$Width = 10  # Total width = 10nm
$XYGRID = 0.5 # X-Y Meshing
$ZGRID = 0.3 # Z Meshing
$NUME = 4      # number of electron states
$NUMH = 4      # number of hole states
#$KP6 = 0       # use either 6-band k.p model for holes (1) or 1-band effective mass model (0) 
#$KP8 = 0       # use either 8-band k.p model for electrons and holes (1) or 1-band effective mass model (0)
$AVS = 1       # 2D output in AVS (1) or Origin (0) format

global{ 
   simulate3D{}
   temperature  = 77
   substrate{ name = "GaAs" }
periodic{ x = yes y = yes z=no}
   crystal_zb{ x_hkl = [1, 0, 0] y_hkl = [0, 1, 0] } 
# Defines orientation of simulation domain (Growth Direction: z = [001])
}<>

output{
#if $AVS format2D = AvsAscii
#if $ORIGIN format2D = Origin
   format3D = AvsAscii                               # No Origin format available (default: AvsBinary)
   section2D{ name = "side"  y = 0 }                   # 2D cross section along XZ plane (at dot center)
   section1D{ name = "z" x = 0 y = 0 }               # 1D cross section along growth direction (at dot center)
   section1D{ name = "x" y = 0 z = 2} # 1D cross section along x direction (at dot base)
}<>

grid{
   xgrid{
      line{ pos = -$Width      spacing = 10*$XYGRID}
      line{ pos = -$Width/2      spacing = 8*$XYGRID}
      line{ pos = -$Width/4      spacing = 6*$XYGRID}
      line{ pos = $Width/4      spacing = 6*$XYGRID}
      line{ pos = $Width/2      spacing = 8*$XYGRID}
      line{ pos = $Width       spacing = 10*$XYGRID}
   }

   ygrid{
      line{ pos = -$Width      spacing = 10*$XYGRID}
      line{ pos = -$Width/2      spacing = 8*$XYGRID}
      line{ pos = -$Width/4      spacing = 6*$XYGRID}
      line{ pos = $Width/4      spacing = 6*$XYGRID}
      line{ pos = $Width/2      spacing = 8*$XYGRID}
      line{ pos = $Width      spacing = 10*$XYGRID}
   }

   zgrid{
      line{ pos = 5200        spacing = 10*$ZGRID}
      line{ pos = 5150        spacing = 9*$ZGRID}
      line{ pos = 4950        spacing = 9*$ZGRID}
      line{ pos = 4700        spacing = 8*$ZGRID}
      line{ pos = 2700        spacing = 8*$ZGRID}
      line{ pos = 2200        spacing = 9*$ZGRID}
      line{ pos = 200         spacing = 9*$ZGRID}
      line{ pos = 0           spacing = 10*$ZGRID}
   }
}<>

structure{  
output_material_index{}
region{
everywhere{}
binary{ name = "GaAs"}
contact{ name = "dummy"}
}
# 50nm InAs n+Cap
region{
cuboid{ x = [-$Width, $Width] y = [-$Width, $Width] z = [5150,5200] }
binary{ name="InAs" }
}
# 200nm GaSb n+TopContact
region{
cuboid{ x = [-$Width, $Width] y = [-$Width, $Width] z = [4950,5150] }
binary{ name="GaSb" }
}
# 250nm AlSb n-Barrier
region{
cuboid{ x = [-$Width, $Width] y = [-$Width, $Width] z = [4700,4950] }
binary{ name="AlSb" }
}
# 2000nm GaSb p-Absorber
region{
cuboid{ x = [-$Width, $Width] y = [-$Width, $Width] z = [2700,4700] }
binary{ name="GaSb" }
}
# 500nm InAs p+BottomContact
region{
cuboid{ x = [-$Width, $Width] y = [-$Width, $Width] z = [2200,2700] }
binary{ name="InAs" }
}
# 2000nm GaSb Buffer
region{
cuboid{ x = [-$Width, $Width] y = [-$Width, $Width] z = [200,2200] }
binary{ name="GaSb" }
}
# 200nm GaAs Buffer
region{
cuboid{ x = [-$Width, $Width] y = [-$Width, $Width] z = [0,200] }
binary{ name="GaAs" }
}
  
}<>


classical{
   Gamma{}
   LH{}
   HH{}
   SO{}

   output_bandedges{}
}<>


quantum{
region{
name = "dot"
x = [-10, 10]
y = [-10, 10]
z = [1980, 2020]
boundary{ x = dirichlet y = dirichlet z = dirichlet }
#if $ELEC1 Gamma{ num_ev = $NUME } 
#if $HOLE1 HH{ num_ev = $NUMH }
#if $KP6   kp_6band{ num_ev = $NUMH }
#if $KP8   kp_8band{ num_electrons = $NUME num_holes = $NUMH }

      kp_8band{ 
        num_electrons=6 num_holes=6
      #  #lapack {}
       arpack_inv {}
#        kp_parameters{
#           rescale_S_to = 1.0  # in order to avoid spurious solution
#        }
      spurious_handling = [ 0.0, 1.0, -1.0, 1.0, 0.0, 1.0 ] # to be consistent with older versions of nextnano++

 #     linear_solver{
 #                 iterations = 10000
  #                }

      }  

      output_wavefunctions{  amplitudes = no  probabilities = yes  max_num = $NUME+$NUMH }
   
}
}<>


poisson{
   output_potential{}
}<>



contacts{
fermi{ name = "dummy" bias = 0.0 } # only needed to define reference energy
} <>

strain{
minimized_strain{}
# pseudomorphic_strain{}
# polarization_charges = yes
growth_direction = [0,0,1]
output_strain_tensor{
simulation_system = yes
}
output_polarization_charges{}
} <>

optics{
region {
name = "dot"
interband = yes
intraband = yes
polarization{
name = "x"
re = [1,0,0]
}

output_transitions = yes
output_components = yes
energy_min = 0.5
energy_max = 2.0
}
}

run{
solve_strain{}
solve_poisson{}
solve_quantum{}
calculate_optics{}
# outer_iteration{}
} <>


